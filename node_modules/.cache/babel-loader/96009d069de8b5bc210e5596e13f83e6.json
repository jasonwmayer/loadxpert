{"ast":null,"code":"var _jsxFileName = \"/Users/jasonmayer/Workspace/load-xpert/src/containers/LoadPlanner/LoadPlanSearchForm.js\";\nimport React, { useContext, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MillContext from '../../contexts/mill-context';\nimport { WebAPIGetCall } from '../../actions/webapicalls';\nimport { populateSearchResults } from '../../actions/loadplanner/SearchResults';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(0)\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst LoadPlanSearchForm = () => {\n  const classes = useStyles();\n  const [loadplanname, setLoadPlanName] = React.useState('');\n  const [mode, setMode] = React.useState('AllModes');\n  const [mill, setMill] = React.useState('2');\n  const [searchcondition, setSearchCondition] = React.useState('contains');\n  const {\n    mills,\n    loadplans,\n    loadplanDispatch,\n    progressDispatch\n  } = useContext(MillContext);\n  useEffect(() => {\n    if (!loadplans) return;\n    if (loadplans.loadplanname) setLoadPlanName(loadplans.loadplanname);\n    if (loadplans.mode) setMode(loadplans.mode);\n    if (loadplans.mill) setMill(loadplans.mill);\n    if (loadplans.searchcondition) setSearchCondition(loadplans.searchcondition);\n\n    async function InvokeAsync() {\n      const jsonResponse = await WebAPIGetCall(`Query/SearchLoadPlans/${mode}/${mill}/${searchcondition}/${loadplanname}`, progressDispatch);\n      loadplanDispatch(populateSearchResults(jsonResponse));\n    }\n\n    InvokeAsync();\n    loadplanDispatch(populateSearchResults(loadplanDispatch, loadplanname, loadplans, mill, mode, progressDispatch, searchcondition));\n  }, [loadplanDispatch, loadplanname, loadplans, mill, mode, progressDispatch, searchcondition]);\n\n  const handleModeChange = event => {\n    setMode(event.target.value);\n  };\n\n  const handleMillChange = event => {\n    setMill(event.target.value);\n  };\n\n  const handleSearchCondition = event => {\n    setSearchCondition(event.target.value);\n  };\n\n  const handleReset = () => {\n    setLoadPlanName('');\n    setMode('AlModes');\n    setMill('2');\n  };\n\n  const handleLoadPlanNameChange = event => {\n    setLoadPlanName(event.target.value);\n  };\n\n  const handleSearchLoadPlans = () => {\n    async function InvokeAsync() {\n      const jsonResponse = await WebAPIGetCall(`Query/SearchLoadPlans/${mode}/${mill}/${searchcondition}/${loadplanname}`, progressDispatch);\n      loadplanDispatch(populateSearchResults(jsonResponse));\n    }\n\n    InvokeAsync();\n    loadplanDispatch(populateSearchResults({\n      loadplanname,\n      mode,\n      mill,\n      searchcondition\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    shrink: true,\n    id: \"demo-simple-select-placeholder-label-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 20\n    }\n  }, \"Search Criteria\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-placeholder-label-label\",\n    id: \"demo-simple-select-placeholder-label\",\n    value: searchcondition,\n    onChange: handleSearchCondition,\n    displayEmpty: true,\n    className: classes.selectEmpty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"contains\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, \"Contains\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'begins',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"Begins With\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'ends',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Ends With\")), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"(For LoadPlan Name)\")), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-search\",\n    label: \"Search LoadPlan\",\n    type: \"search\",\n    value: loadplanname,\n    onChange: handleLoadPlanNameChange,\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    shrink: true,\n    id: \"demo-simple-select-placeholder-label-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Mode\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-placeholder-label-label\",\n    id: \"demo-simple-select-placeholder-label\",\n    value: mode,\n    onChange: handleModeChange,\n    displayEmpty: true,\n    className: classes.selectEmpty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"AllModes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, \"All Modes\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'Rail',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, \"Rail\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'Truck',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"Trailer\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'Piggyback',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, \"Piggyback\")), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"(Transport Modes)\")), mills && /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    shrink: true,\n    id: \"demo-simple-select-placeholder-label-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"Mills\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-placeholder-label-label\",\n    id: \"demo-simple-select-placeholder-label\",\n    displayEmpty: true,\n    value: mill,\n    onChange: handleMillChange,\n    className: classes.selectEmpty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, \"(Mills)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: handleSearchLoadPlans,\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 16\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    onClick: handleReset,\n    startIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Reset\")));\n};\n\nexport default LoadPlanSearchForm;","map":{"version":3,"sources":["/Users/jasonmayer/Workspace/load-xpert/src/containers/LoadPlanner/LoadPlanSearchForm.js"],"names":["React","useContext","useEffect","TextField","makeStyles","InputLabel","MenuItem","FormHelperText","FormControl","Select","Button","DeleteIcon","SearchIcon","MillContext","WebAPIGetCall","populateSearchResults","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","formControl","margin","minWidth","selectEmpty","marginTop","button","LoadPlanSearchForm","classes","loadplanname","setLoadPlanName","useState","mode","setMode","mill","setMill","searchcondition","setSearchCondition","mills","loadplans","loadplanDispatch","progressDispatch","InvokeAsync","jsonResponse","handleModeChange","event","target","value","handleMillChange","handleSearchCondition","handleReset","handleLoadPlanNameChange","handleSearchLoadPlans"],"mappings":"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","sourcesContent":["import React,{useContext,useEffect} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MillContext from '../../contexts/mill-context';\r\n\r\n\r\nimport { WebAPIGetCall } from '../../actions/webapicalls';\r\nimport { populateSearchResults } from '../../actions/loadplanner/SearchResults';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 300,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(2),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(0)\r\n    },\r\n    button: {\r\n        marginTop:theme.spacing(3),\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n}));\r\n\r\n\r\n    const LoadPlanSearchForm = () => {\r\n    const classes = useStyles();\r\n    const [loadplanname, setLoadPlanName] = React.useState('');\r\n    const [mode, setMode] = React.useState('AllModes');\r\n    const [mill, setMill] = React.useState('2');\r\n    const [searchcondition, setSearchCondition] = React.useState('contains');\r\n    \r\n    const {mills,loadplans,loadplanDispatch,progressDispatch} = useContext(MillContext);\r\n  \r\n    useEffect(()=>{\r\n        if(!loadplans) return;\r\n        if(loadplans.loadplanname)\r\n            setLoadPlanName(loadplans.loadplanname)\r\n        if(loadplans.mode)\r\n            setMode(loadplans.mode)\r\n        if(loadplans.mill)\r\n            setMill(loadplans.mill)\r\n        if(loadplans.searchcondition)\r\n            setSearchCondition(loadplans.searchcondition)\r\n\r\n        async function InvokeAsync(){\r\n            const jsonResponse = await WebAPIGetCall(`Query/SearchLoadPlans/${mode}/${mill}/${searchcondition}/${loadplanname}`,progressDispatch )\r\n            loadplanDispatch(populateSearchResults(jsonResponse))\r\n      }\r\n\r\n        InvokeAsync();\r\n        loadplanDispatch(populateSearchResults(loadplanDispatch, loadplanname, loadplans, mill, mode, progressDispatch,searchcondition))    \r\n\r\n    },[loadplanDispatch, loadplanname, loadplans, mill, mode, progressDispatch, searchcondition]);\r\n\r\n    const handleModeChange = event => {\r\n        setMode(event.target.value);\r\n        \r\n    };\r\n    const handleMillChange = event => {\r\n        setMill(event.target.value);\r\n    };\r\n    const handleSearchCondition = event =>{\r\n        setSearchCondition(event.target.value);\r\n    } \r\n    const handleReset = ()=>{\r\n        setLoadPlanName('');\r\n        setMode('AlModes');\r\n        setMill('2');\r\n    }\r\n\r\n    const handleLoadPlanNameChange = (event)=>{\r\n        setLoadPlanName(event.target.value);\r\n    }\r\n\r\n    const handleSearchLoadPlans =()=>{\r\n        async function InvokeAsync(){\r\n            const jsonResponse = await WebAPIGetCall(`Query/SearchLoadPlans/${mode}/${mill}/${searchcondition}/${loadplanname}`,progressDispatch)\r\n            loadplanDispatch(populateSearchResults(jsonResponse))\r\n        }\r\n        InvokeAsync();\r\n        loadplanDispatch(populateSearchResults({loadplanname,mode,mill,searchcondition}));\r\n    }\r\n\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <div>\r\n               <FormControl className={classes.formControl}>\r\n                   <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                        Search Criteria\r\n                   </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-placeholder-label-label\"\r\n                        id=\"demo-simple-select-placeholder-label\"\r\n                        value={searchcondition}\r\n                        onChange={handleSearchCondition}\r\n                        displayEmpty\r\n                        className={classes.selectEmpty}\r\n                    >\r\n                        <MenuItem value='contains'>\r\n                            <em>Contains</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={'begins'}>Begins With</MenuItem>\r\n                        <MenuItem value={'ends'}>Ends With</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText>(For LoadPlan Name)</FormHelperText>\r\n                </FormControl>\r\n                <TextField\r\n                    id=\"standard-search\"\r\n                    label=\"Search LoadPlan\"\r\n                    type=\"search\"\r\n                    value={loadplanname}\r\n                    onChange={handleLoadPlanNameChange}\r\n                    className={classes.textField}\r\n                    margin=\"normal\"\r\n                />\r\n         \r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                        Mode\r\n                   </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-placeholder-label-label\"\r\n                        id=\"demo-simple-select-placeholder-label\"\r\n                        value={mode}\r\n                        onChange={handleModeChange}\r\n                        displayEmpty\r\n                        className={classes.selectEmpty}\r\n                    >\r\n                        <MenuItem value='AllModes'>\r\n                            <em>All Modes</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={'Rail'}>Rail</MenuItem>\r\n                        <MenuItem value={'Truck'}>Trailer</MenuItem>\r\n                        <MenuItem value={'Piggyback'}>Piggyback</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText>(Transport Modes)</FormHelperText>\r\n                </FormControl>\r\n                {mills && (\r\n                    <FormControl className={classes.formControl}>\r\n                    <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                        Mills\r\n                   </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-placeholder-label-label\"\r\n                        id=\"demo-simple-select-placeholder-label\"\r\n                        displayEmpty\r\n                        value={mill}\r\n                        onChange={handleMillChange}\r\n                        className={classes.selectEmpty}\r\n                    >\r\n                        {/* {mills.map(({Id,MillName})=>{\r\n                            return ( \r\n                                <MenuItem key={Id} value={Id}>{MillName}</MenuItem>\r\n                            )}\r\n                        )}\r\n                        */}\r\n                       </Select>\r\n                    <FormHelperText>(Mills)</FormHelperText>\r\n                </FormControl>\r\n                )}\r\n            </div>\r\n            <div>\r\n               <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={handleSearchLoadPlans}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Search\r\n                </Button>  \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={handleReset}\r\n                    startIcon={<DeleteIcon />}\r\n                >\r\n                    Reset\r\n                </Button>  \r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport default LoadPlanSearchForm;"]},"metadata":{},"sourceType":"module"}