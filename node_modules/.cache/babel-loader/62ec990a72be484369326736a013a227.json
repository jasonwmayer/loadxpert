{"ast":null,"code":"var _jsxFileName = \"/Users/jasonmayer/Workspace/load-xpert/src/containers/LoadPlanner/LoadPlanResults.js\";\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable no-unused-vars */\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; //import { lighten, makeStyles,withStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport LoadPlanResultsTableHead from './_loadplanResultsTableHead';\nimport LoadPlanResultsToolBar from './_loadplanResultsToolbar';\nimport { stableSort, getSorting } from '../../selectors/LoadPlanResultsSorter'; //import Button from '@material-ui/core/Button';\n\nimport SearchIcon from '@material-ui/icons/Search'; //import Fab from '@material-ui/core/Fab';\n//import LaunchIcon from '@material-ui/icons/Launch';\n\nimport IconButton from '@material-ui/core/IconButton'; //import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport MillContext from '../../contexts/mill-context';\nconst loadPlanResults = [];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\n\nfunction LoadPlanResults({\n  handleViewLoadPlan\n}) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const {\n    loadplans\n  } = useContext(MillContext);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = loadPlanResults.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, loadPlanResults.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadPlanResultsToolBar, {\n    numSelected: selected.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? 'small' : 'medium',\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LoadPlanResultsTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: loadPlanResults.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, stableSort((row, index) => {\n    const isItemSelected = isSelected(row.name);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.name,\n      selected: isItemSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      onClick: event => handleClick(event, row.name),\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      id: row.Id,\n      scope: \"row\",\n      padding: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, row.batchID), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, row.shipTo), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, row.mode), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, row.SubmitedBy), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, row.ApprovedBy), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"delete\",\n      className: classes.margin,\n      onClick: () => {\n        handleViewLoadPlan(row.id, row.name);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }))));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: (dense ? 33 : 53) * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: loadPlanResults.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: dense,\n      onChange: handleChangeDense,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 20\n      }\n    }),\n    label: \"Dense padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default LoadPlanResults;","map":{"version":3,"sources":["/Users/jasonmayer/Workspace/load-xpert/src/containers/LoadPlanner/LoadPlanResults.js"],"names":["React","useContext","makeStyles","Table","TableBody","TableCell","TablePagination","TableRow","Paper","Checkbox","FormControlLabel","Switch","LoadPlanResultsTableHead","LoadPlanResultsToolBar","stableSort","getSorting","SearchIcon","IconButton","MillContext","loadPlanResults","useStyles","theme","root","width","marginTop","spacing","paper","marginBottom","table","minWidth","tableWrapper","overflowX","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","LoadPlanResults","handleViewLoadPlan","classes","order","setOrder","useState","orderBy","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","loadplans","handleRequestSort","event","property","isDesc","handleSelectAllClick","target","checked","newSelecteds","map","n","name","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","isSelected","emptyRows","Math","min","row","index","isItemSelected","labelId","Id","batchID","shipTo","mode","SubmitedBy","ApprovedBy","id"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\nimport React,{useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import { lighten, makeStyles,withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport LoadPlanResultsTableHead from './_loadplanResultsTableHead';\r\nimport LoadPlanResultsToolBar from './_loadplanResultsToolbar';\r\nimport {stableSort,getSorting} from '../../selectors/LoadPlanResultsSorter';\r\n//import Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n//import Fab from '@material-ui/core/Fab';\r\n//import LaunchIcon from '@material-ui/icons/Launch';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n//import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MillContext from '../../contexts/mill-context';\r\n\r\n \r\n  const loadPlanResults = [];\r\n  \r\n  \r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    tableWrapper: {\r\n      overflowX: 'auto',\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }));\r\n  \r\n  function LoadPlanResults({handleViewLoadPlan}) {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(true);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const {loadplans} = useContext(MillContext);\r\n  \r\n  \r\n    const handleRequestSort = (event, property) => {\r\n      const isDesc = orderBy === property && order === 'desc';\r\n      setOrder(isDesc ? 'asc' : 'desc');\r\n      setOrderBy(property);\r\n    };\r\n  \r\n    const handleSelectAllClick = event => {\r\n      if (event.target.checked) {\r\n        const newSelecteds = loadPlanResults.map(n => n.name);\r\n        setSelected(newSelecteds);\r\n        return;\r\n      }\r\n      setSelected([]);\r\n    };\r\n  \r\n    const handleClick = (event, name) => {\r\n      const selectedIndex = selected.indexOf(name);\r\n      let newSelected = [];\r\n  \r\n      if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(selected, name);\r\n      } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(selected.slice(1));\r\n      } else if (selectedIndex === selected.length - 1) {\r\n        newSelected = newSelected.concat(selected.slice(0, -1));\r\n      } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(\r\n          selected.slice(0, selectedIndex),\r\n          selected.slice(selectedIndex + 1),\r\n        );\r\n      }\r\n  \r\n      setSelected(newSelected);\r\n    };\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = event => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n  \r\n    const handleChangeDense = event => {\r\n      setDense(event.target.checked);\r\n    };\r\n  \r\n    const isSelected = name => selected.indexOf(name) !== -1;\r\n  \r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, loadPlanResults.length - page * rowsPerPage);\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <LoadPlanResultsToolBar numSelected={selected.length} />\r\n          <div className={classes.tableWrapper}>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? 'small' : 'medium'}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <LoadPlanResultsTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={loadPlanResults.length}\r\n              />\r\n              <TableBody>\r\n                {/* {stableSort(loadplans, getSorting(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)} */}\r\n                 {stableSort((row, index) => {\r\n                    const isItemSelected = isSelected(row.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n  \r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            onClick={event => handleClick(event, row.name)}\r\n                            checked={isItemSelected}\r\n                            inputProps={{ 'aria-labelledby': labelId }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" id={row.Id} scope=\"row\" padding=\"none\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.batchID}</TableCell>\r\n                        <TableCell align=\"right\">{row.shipTo}</TableCell>\r\n                        <TableCell align=\"right\">{row.mode}</TableCell>\r\n                        <TableCell align=\"right\">{row.SubmitedBy}</TableCell>\r\n                        <TableCell align=\"right\">{row.ApprovedBy}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <IconButton \r\n                                aria-label=\"delete\" \r\n                                className={classes.margin} \r\n                                onClick={()=> {\r\n                                  handleViewLoadPlan(row.id,row.name)\r\n                                }}\r\n                                size=\"small\">\r\n                            <SearchIcon fontSize=\"inherit\" />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                     </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={loadPlanResults.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              'aria-label': 'previous page',\r\n            }}\r\n            nextIconButtonProps={{\r\n              'aria-label': 'next page',\r\n            }}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default LoadPlanResults;\r\n  "]},"metadata":{},"sourceType":"module"}